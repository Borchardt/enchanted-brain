AWSTemplateFormatVersion: '2010-09-09'

Transform: AWS::Serverless-2016-10-31

Parameters:

  Environment:
    Type: String
    AllowedValues:
      - development
      - production
      - staging
      - testing

Mappings:

  ChoiceTableCapacities:
    development:
      ReadMin: 1
      WriteMin: 1
    production:
      ReadMin: 1
      WriteMin: 1
    staging:
      ReadMin: 1
      WriteMin: 1

Globals:

  Function:
    Handler: index.handler
    Runtime: python3.7
    Tracing: Active
    Timeout: 10
    AutoPublishAlias: live
    Environment:
      Variables:
        DYNAMODB_ENDPOINT: ''
        EVENT_NAME:


Resources:

  DeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}-dead-letter-queue
      KmsMasterKeyId: alias/aws/sqs

  ChoiceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-choice
      AttributeDefinitions:
        - AttributeName: songId
          AttributeType: S
        - AttributeName: listenId
          AttributeType: S
      KeySchema:
        - AttributeName: songId
          KeyType: HASH
        - AttributeName: listenId
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: !FindInMap [ChoiceTableCapacities, !Ref Environment, ReadMin]
        WriteCapacityUnits: !FindInMap [ChoiceTableCapacities, !Ref Environment, WriteMin]
      SSESpecification:
        SSEEnabled: yes

  ChoiceMadeSnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${Environment}-choice-made
      KmsMasterKeyId: alias/aws/sns

  ChoiceWriterFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-choice-writer
      CodeUri: lambdas/choice/src
      Handler: writer.handler
      Events:
        SnsEvent:
          Type: SNS
          Properties:
            Topic: !Ref ChoiceMadeSnsTopic
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref ChoiceTable
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: dynamodb:UpdateItem
              Resource: !GetAtt ChoiceTable.Arn
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt DeadLetterQueue.Arn

Outputs:
  RestApiUrl:
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/${ServerlessRestApi.Stage}/
